{"version":3,"file":"js/551.9aa78c0c.js","mappings":"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","sources":["webpack://frontend/./src/components/Incident/IncidentPerformanceDashboard.vue","webpack://frontend/./src/components/Incident/IncidentPerformanceDashboard.vue?f751"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"dashboard-header\">\r\n      <h1>Incident Dashboard</h1>\r\n      <div class=\"header-actions\">\r\n        <button class=\"refresh-btn\" @click=\"refreshData\"><i class=\"fas fa-sync\"></i></button>\r\n        <button class=\"download-btn\"><i class=\"fas fa-download\"></i></button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"metrics-grid\">\r\n      <!-- Total Incidents Card -->\r\n      <div class=\"metric-card\">\r\n        <div class=\"metric-icon incident-icon\">\r\n          <i class=\"fas fa-exclamation-circle\"></i>\r\n        </div>\r\n        <div class=\"metric-content\">\r\n          <h3>Total Incidents</h3>\r\n          <div class=\"metric-value\">\r\n            <span class=\"number\">{{ dashboardData.total_count || 0 }}</span>\r\n          </div>\r\n          <div class=\"metric-change\">\r\n            {{ dashboardData.change_percentage > 0 ? '+' : '' }}{{ dashboardData.change_percentage }}% from last period\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n      <!-- Open Incidents Card -->\r\n      <div class=\"metric-card\">\r\n        <div class=\"metric-icon open-icon\">\r\n          <i class=\"fas fa-clipboard-list\"></i>\r\n        </div>\r\n        <div class=\"metric-content\">\r\n          <h3>Open Incidents</h3>\r\n          <div class=\"metric-value\">\r\n            <span class=\"number\">{{ dashboardData.status_counts.scheduled || 0 }}</span>\r\n          </div>\r\n          <div class=\"metric-change\">\r\n            Awaiting resolution\r\n          </div>\r\n        </div>\r\n      </div>\r\n        \r\n      <!-- Rejected Card -->\r\n      <div class=\"metric-card\">\r\n        <div class=\"metric-icon rejected-icon\">\r\n          <i class=\"fas fa-ban\"></i>\r\n        </div>\r\n        <div class=\"metric-content\">\r\n          <h3>Rejected</h3>\r\n          <div class=\"metric-value\">\r\n            <span class=\"number\">{{ dashboardData.status_counts.rejected || 0 }}</span>\r\n          </div>\r\n          <div class=\"metric-change\">\r\n            Rejected incidents\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n                <!-- Approved Card -->\r\n      <div class=\"metric-card\">\r\n        <div class=\"metric-icon approved-icon\">\r\n          <i class=\"fas fa-check-circle\"></i>\r\n        </div>\r\n        <div class=\"metric-content\">\r\n          <h3>Approved</h3>\r\n          <div class=\"metric-value\">\r\n            <span class=\"number\">{{ dashboardData.status_counts.approved || 0 }}</span>\r\n          </div>\r\n          <div class=\"metric-change\">\r\n            Approved incidents\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"dashboard-content\">\r\n      <div class=\"performance-chart\">\r\n        <div class=\"chart-header\">\r\n          <h2>Incident Analytics</h2>\r\n          <div class=\"chart-controls\">\r\n            <div class=\"chart-type-icons\">\r\n              <button \r\n                class=\"chart-type-btn\" \r\n                :class=\"{ active: selectedChartType === 'bar' }\"\r\n                @click=\"changeChartType('bar')\"\r\n                title=\"Bar Chart\"\r\n              >\r\n                <i class=\"fas fa-chart-bar\"></i>\r\n              </button>\r\n              <button \r\n                class=\"chart-type-btn\" \r\n                :class=\"{ active: selectedChartType === 'line' }\"\r\n                @click=\"changeChartType('line')\"\r\n                title=\"Line Chart\"\r\n              >\r\n                <i class=\"fas fa-chart-line\"></i>\r\n              </button>\r\n              <button \r\n                class=\"chart-type-btn\" \r\n                :class=\"{ active: selectedChartType === 'pie' }\"\r\n                @click=\"changeChartType('pie')\"\r\n                title=\"Pie Chart\"\r\n              >\r\n                <i class=\"fas fa-chart-pie\"></i>\r\n              </button>\r\n              <button \r\n                class=\"chart-type-btn\" \r\n                :class=\"{ active: selectedChartType === 'doughnut' }\"\r\n                @click=\"changeChartType('doughnut')\"\r\n                title=\"Doughnut Chart\"\r\n              >\r\n                <i class=\"fas fa-circle-notch\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"axis-controls\">\r\n              <div class=\"axis-select\">\r\n                <label>X Axis:</label>\r\n                <select v-model=\"selectedXAxis\" @change=\"fetchDashboardData\">\r\n                  <option value=\"Time\">Incidents</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"axis-select\">\r\n                <label>Y Axis:</label>\r\n                <select v-model=\"selectedYAxis\" @change=\"fetchDashboardData\">\r\n                  <option value=\"Status\">By Status</option>\r\n                  <option value=\"Origin\">By Origin</option>\r\n                  <option value=\"RiskCategory\">By Risk Category</option>\r\n                  <option value=\"RiskPriority\">By Risk Priority</option>\r\n                  <option value=\"Repeated\">By Repeated Status</option>\r\n                  <option value=\"CostImpact\">By Cost (₹)</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chart-container\">\r\n          <canvas id=\"myChart\"></canvas>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"recent-activity\">\r\n        <div class=\"activity-header\">\r\n          <h2>Recent Incidents</h2>\r\n          <button class=\"more-options\"><i class=\"fas fa-ellipsis-v\"></i></button>\r\n        </div>\r\n        <div class=\"activity-list\">\r\n          <div v-for=\"(incident, index) in recentIncidents\" :key=\"index\" class=\"activity-item\">\r\n            <div class=\"activity-icon\" :class=\"incident.priority_class\">\r\n              <i :class=\"incident.icon\"></i>\r\n            </div>\r\n            <div class=\"activity-details\">\r\n              <h4>{{ incident.IncidentTitle }}</h4>\r\n              <p>{{ truncateDescription(incident.Description, 100) }}</p>\r\n              <div class=\"activity-meta\">\r\n                <span class=\"activity-tag origin-tag\">{{ incident.origin_text }}</span>\r\n                <span v-if=\"incident.status_class\" class=\"activity-tag status-tag\" :class=\"incident.status_class\">{{ incident.Status }}</span>\r\n                <span class=\"activity-time\">{{ formatDate(incident.CreatedAt) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Popup Modal -->\r\n    <PopupModal />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport { incidentService } from '@/services/api'\r\nimport { PopupModal } from '@/modules/popup'\r\nimport { AccessUtils } from '@/utils/accessUtils'\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  RadialLinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n)\r\n\r\nexport default {\r\n  name: 'IncidentPerformanceDashboard',\r\n  components: {\r\n    PopupModal\r\n  },\r\n  data() {\r\n    return {\r\n      selectedChartType: 'bar',\r\n      selectedXAxis: 'Time',\r\n      selectedYAxis: 'Severity',\r\n      chart: null,\r\n      chartId: 'myChart',\r\n      api: {\r\n        incidentService\r\n      },\r\n      dashboardData: {\r\n        status_counts: {\r\n          scheduled: 0,\r\n          approved: 0,\r\n          resolved: 0,\r\n          rejected: 0\r\n        },\r\n        total_count: 0,\r\n        change_percentage: 0,\r\n        resolution_rate: 0\r\n      },\r\n      chartData: null,\r\n      recentIncidents: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDashboardData()\r\n    this.fetchRecentIncidents()\r\n  },\r\n  beforeUnmount() {\r\n    this.destroyChart()\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    this.destroyChart()\r\n    next()\r\n  },\r\n  methods: {\r\n    destroyChart() {\r\n      if (this.chart) {\r\n        this.chart.destroy()\r\n        this.chart = null\r\n      }\r\n    },\r\n    async fetchRecentIncidents() {\r\n      try {\r\n        const response = await this.api.incidentService.getRecentIncidents(3)\r\n        if (response.data && response.data.success) {\r\n          this.recentIncidents = response.data.incidents.map(incident => {\r\n            // Add priority class and icon based on severity\r\n            let priorityClass = 'medium'\r\n            let icon = 'fas fa-exclamation-triangle'\r\n            \r\n            if (incident.RiskPriority) {\r\n              const priority = incident.RiskPriority.toLowerCase();\r\n              if (priority.includes('high')) {\r\n                priorityClass = 'high'\r\n                icon = 'fas fa-radiation'\r\n              } else if (priority.includes('low')) {\r\n                priorityClass = 'low'\r\n                icon = 'fas fa-info-circle'\r\n              }\r\n            }\r\n            \r\n            // Add status class\r\n            let statusClass = '';\r\n            if (incident.Status) {\r\n              const status = incident.Status.toLowerCase();\r\n              if (status.includes('rejected')) {\r\n                statusClass = 'rejected';\r\n              } else if (status.includes('approved')) {\r\n                statusClass = 'approved';\r\n              } else if (status.includes('scheduled')) {\r\n                statusClass = 'scheduled';\r\n              }\r\n            }\r\n            \r\n            // Add origin info\r\n            let originText = incident.Origin || 'Unknown';\r\n            \r\n            return {\r\n              ...incident,\r\n              priority_class: priorityClass,\r\n              status_class: statusClass,\r\n              icon: icon,\r\n              origin_text: originText\r\n            }\r\n          })\r\n        } else {\r\n          console.error('Failed to fetch recent incidents')\r\n          this.recentIncidents = []\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching recent incidents:', error)\r\n        \r\n        // Check for access denied first\r\n        if (AccessUtils.handleApiError(error)) {\r\n          return\r\n        }\r\n        \r\n        this.recentIncidents = []\r\n      }\r\n    },\r\n    async fetchDashboardData() {\r\n      try {\r\n        console.log('Starting fetchDashboardData for incidents...')\r\n        console.log('Request payload:', {\r\n          xAxis: this.selectedXAxis,\r\n          yAxis: this.selectedYAxis\r\n        })\r\n\r\n        // First fetch the dashboard data\r\n        let dashboardResponse, analyticsResponse\r\n        \r\n        try {\r\n          dashboardResponse = await this.api.incidentService.getIncidentDashboard()\r\n          console.log('Incident Dashboard API Response:', dashboardResponse.data)\r\n        } catch (err) {\r\n          console.error('Error fetching dashboard data:', err)\r\n          \r\n          // Check for access denied first\r\n          if (AccessUtils.handleApiError(err)) {\r\n            return\r\n          }\r\n          \r\n          throw new Error(`Dashboard fetch failed: ${err.message}`)\r\n        }\r\n        \r\n        try {\r\n          analyticsResponse = await this.api.incidentService.getIncidentAnalytics({\r\n            xAxis: this.selectedXAxis,\r\n            yAxis: this.selectedYAxis\r\n          })\r\n          console.log('Incident Analytics API Response:', analyticsResponse.data)\r\n        } catch (err) {\r\n          console.error('Error fetching analytics data:', err)\r\n          \r\n          // Check for access denied first\r\n          if (AccessUtils.handleApiError(err)) {\r\n            return\r\n          }\r\n          \r\n          throw new Error(`Analytics fetch failed: ${err.message}`)\r\n        }\r\n\r\n        // Check if we got valid responses\r\n        if (!dashboardResponse.data) {\r\n          console.error('Dashboard response data is null or undefined')\r\n          throw new Error('Invalid dashboard response')\r\n        }\r\n\r\n        if (!analyticsResponse.data) {\r\n          console.error('Analytics response data is null or undefined')\r\n          throw new Error('Invalid analytics response')\r\n        }\r\n\r\n        if (dashboardResponse.data.success && analyticsResponse.data.success) {\r\n          // Validate that the summary data exists\r\n          if (!dashboardResponse.data.data || !dashboardResponse.data.data.summary) {\r\n            console.error('Dashboard response does not contain expected data structure', dashboardResponse.data)\r\n            throw new Error('Invalid dashboard data structure')\r\n          }\r\n\r\n          // Validate that chart data exists\r\n          if (!analyticsResponse.data.chartData) {\r\n            console.error('Analytics response does not contain expected chartData', analyticsResponse.data)\r\n            throw new Error('Invalid analytics data structure')\r\n          }\r\n\r\n          // Update dashboard metrics with detailed logging\r\n          const summary = dashboardResponse.data.data.summary\r\n          console.log('Dashboard summary data:', summary)\r\n          \r\n          this.dashboardData = {\r\n            status_counts: summary.status_counts || {},\r\n            total_count: summary.total_count || 0,\r\n            change_percentage: summary.change_percentage || 0,\r\n            resolution_rate: summary.resolution_rate || 0\r\n          }\r\n          \r\n          console.log('Updated dashboard data:', this.dashboardData)\r\n          \r\n          // Update chart data\r\n          this.chartData = analyticsResponse.data.chartData\r\n          console.log('Updated chart data:', this.chartData)\r\n          \r\n          // Wait for the next tick to ensure DOM is updated\r\n          await this.$nextTick()\r\n          this.updateChart()\r\n        } else {\r\n          // Log the error message from the API\r\n          const errorMessage = dashboardResponse.data.message || analyticsResponse.data.message || 'API request failed'\r\n          console.error('API Error:', errorMessage)\r\n          throw new Error(errorMessage)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in fetchDashboardData:', error)\r\n        \r\n        // Check for access denied first\r\n        if (AccessUtils.handleApiError(error)) {\r\n          return\r\n        }\r\n        \r\n        // Set default values on error\r\n        this.dashboardData = {\r\n          status_counts: {\r\n            scheduled: 0,\r\n            approved: 0,\r\n            rejected: 0\r\n          },\r\n          total_count: 0,\r\n          change_percentage: 0,\r\n          resolution_rate: 0\r\n        }\r\n        this.chartData = {\r\n          labels: [],\r\n          datasets: [{\r\n            label: 'Error Loading Data',\r\n            data: [],\r\n            backgroundColor: 'rgba(244, 67, 54, 0.6)',\r\n            borderColor: '#F44336',\r\n            borderWidth: 1\r\n          }]\r\n        }\r\n        await this.$nextTick()\r\n        this.updateChart()\r\n      }\r\n    },\r\n    updateChart() {\r\n      try {\r\n        // Destroy existing chart\r\n        this.destroyChart()\r\n\r\n        // Get the canvas element\r\n        const canvas = document.getElementById(this.chartId)\r\n        if (!canvas) {\r\n          console.error('Chart canvas not found')\r\n          return\r\n        }\r\n\r\n        // Create the chart configuration\r\n        const config = this.createChartConfig()\r\n\r\n        // Create new chart instance\r\n        this.chart = new ChartJS(canvas, config)\r\n      } catch (error) {\r\n        console.error('Error in updateChart:', error)\r\n        this.chart = null\r\n      }\r\n    },\r\n    createChartConfig() {\r\n      if (!this.chartData) {\r\n        return {\r\n          type: this.selectedChartType,\r\n          data: {\r\n            labels: [],\r\n            datasets: [{\r\n              label: 'No Data',\r\n              data: [],\r\n              backgroundColor: 'rgba(200, 200, 200, 0.5)',\r\n              borderColor: '#ccc',\r\n              borderWidth: 1\r\n            }]\r\n          },\r\n          options: this.getChartOptions()\r\n        }\r\n      }\r\n\r\n      // Check if we have multiple datasets (time-based X-axis with Y-axis dimension)\r\n      const hasMultipleDatasets = Array.isArray(this.chartData.datasets) && this.chartData.datasets.length > 1;\r\n      \r\n      let datasets;\r\n      \r\n      if (hasMultipleDatasets) {\r\n        // Use the datasets as provided by the backend\r\n        datasets = this.chartData.datasets.map((dataset, index) => {\r\n          const colors = this.getColorForIndex(index);\r\n          return {\r\n            ...dataset,\r\n            backgroundColor: colors.backgroundColor,\r\n            borderColor: colors.borderColor,\r\n            borderWidth: 1,\r\n            tension: this.selectedChartType === 'line' ? 0.1 : undefined,\r\n            fill: this.selectedChartType === 'line' ? false : undefined\r\n          };\r\n        });\r\n      } else {\r\n        // Single dataset with custom colors based on y-axis\r\n        const dataset = {\r\n          ...this.chartData.datasets[0],\r\n          backgroundColor: this.getBackgroundColors(),\r\n          borderColor: this.getBorderColors(),\r\n          borderWidth: 1\r\n        };\r\n\r\n        if (this.selectedChartType === 'line') {\r\n          dataset.tension = 0.1;\r\n          dataset.fill = false;\r\n        }\r\n        \r\n        datasets = [dataset];\r\n      }\r\n\r\n      return {\r\n        type: this.selectedChartType,\r\n        data: {\r\n          labels: this.chartData.labels,\r\n          datasets: datasets\r\n        },\r\n        options: this.getChartOptions()\r\n      }\r\n    },\r\n    \r\n    // Helper method to get color for multiple datasets\r\n    getColorForIndex(index) {\r\n      const colors = [\r\n        { backgroundColor: 'rgba(255, 99, 132, 0.6)', borderColor: 'rgb(255, 99, 132)' },\r\n        { backgroundColor: 'rgba(54, 162, 235, 0.6)', borderColor: 'rgb(54, 162, 235)' },\r\n        { backgroundColor: 'rgba(255, 206, 86, 0.6)', borderColor: 'rgb(255, 206, 86)' },\r\n        { backgroundColor: 'rgba(75, 192, 192, 0.6)', borderColor: 'rgb(75, 192, 192)' },\r\n        { backgroundColor: 'rgba(153, 102, 255, 0.6)', borderColor: 'rgb(153, 102, 255)' },\r\n        { backgroundColor: 'rgba(255, 159, 64, 0.6)', borderColor: 'rgb(255, 159, 64)' },\r\n        { backgroundColor: 'rgba(199, 199, 199, 0.6)', borderColor: 'rgb(199, 199, 199)' }\r\n      ];\r\n      \r\n      // Use modulo to cycle through colors if we have more datasets than colors\r\n      return colors[index % colors.length];\r\n    },\r\n    getChartOptions() {\r\n      const hasMultipleDatasets = this.chartData && \r\n                                  this.chartData.datasets && \r\n                                  this.chartData.datasets.length > 1;\r\n\r\n      const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: {\r\n          duration: 500,\r\n          easing: 'easeInOutQuad'\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: ['pie', 'doughnut'].includes(this.selectedChartType) || hasMultipleDatasets,\r\n            position: 'top'\r\n          },\r\n          tooltip: {\r\n            enabled: true,\r\n            callbacks: {\r\n              label: (context) => {\r\n                // Special handling for cost impact when it's numeric\r\n                if (this.selectedYAxis === 'CostImpact') {\r\n                  // Check if label is numeric\r\n                  if (!isNaN(parseFloat(context.label))) {\r\n                    const label = 'Cost: ₹' + context.label;\r\n                    const value = context.raw || 0;\r\n                    return `${label} - ${value} incidents`;\r\n                  }\r\n                }\r\n                \r\n                if (['pie', 'doughnut'].includes(this.selectedChartType)) {\r\n                  const label = context.label || ''\r\n                  const value = context.raw || 0\r\n                  const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0)\r\n                  const percentage = ((value / total) * 100).toFixed(1)\r\n                  return `${label}: ${value} (${percentage}%)`\r\n                }\r\n                // For multiple datasets, show both dataset name and value\r\n                if (hasMultipleDatasets) {\r\n                  const label = context.dataset.label || ''\r\n                  const value = context.raw || 0\r\n                  return `${label}: ${value}`\r\n                }\r\n                return `Count: ${context.raw}`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (['bar', 'line'].includes(this.selectedChartType)) {\r\n        options.scales = {\r\n          y: {\r\n            beginAtZero: true,\r\n            ticks: {\r\n              stepSize: 1,\r\n              precision: 0\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Special handling for CostImpact when it's the X-axis\r\n        if (this.selectedYAxis === 'CostImpact' && this.chartData && this.chartData.labels) {\r\n          // Check if labels are numeric (cost values)\r\n          const isNumeric = this.chartData.labels.some(label => !isNaN(parseFloat(label)));\r\n          \r\n          if (isNumeric) {\r\n            // Format x-axis labels with currency symbol\r\n            options.scales.x = {\r\n              ticks: {\r\n                callback: function(value) {\r\n                  return '₹' + this.getLabelForValue(value);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // For stacked bar charts when using multiple datasets with time-based x-axis\r\n        if (this.selectedChartType === 'bar' && \r\n            hasMultipleDatasets &&\r\n            ['Date', 'Month', 'Quarter'].includes(this.selectedXAxis)) {\r\n          options.scales.x = {\r\n            stacked: true,\r\n            ...(options.scales.x || {})\r\n          }\r\n          options.scales.y.stacked = true\r\n        }\r\n      }\r\n\r\n      return options\r\n    },\r\n    changeChartType(newType) {\r\n      if (this.selectedChartType === newType) {\r\n        return\r\n      }\r\n      \r\n      this.selectedChartType = newType\r\n      this.$nextTick(() => {\r\n        this.updateChart()\r\n      })\r\n    },\r\n    getBackgroundColors() {\r\n      const colorMaps = {\r\n        Severity: {\r\n          'High': 'rgba(244, 67, 54, 0.6)',\r\n          'Medium': 'rgba(255, 152, 0, 0.6)',\r\n          'Low': 'rgba(76, 175, 80, 0.6)'\r\n        },\r\n        Status: {\r\n          'Scheduled': 'rgba(255, 152, 0, 0.6)',\r\n          'Approved': 'rgba(76, 175, 80, 0.6)',\r\n          'Rejected': 'rgba(244, 67, 54, 0.6)'\r\n        },\r\n        Origin: {\r\n          'Manual': 'rgba(33, 150, 243, 0.6)',\r\n          'SIEM': 'rgba(156, 39, 176, 0.6)',\r\n          'Audit Finding': 'rgba(255, 193, 7, 0.6)',\r\n          'Other': 'rgba(121, 85, 72, 0.6)'\r\n        },\r\n        RiskCategory: {\r\n          'Security': 'rgba(244, 67, 54, 0.6)',\r\n          'Compliance': 'rgba(156, 39, 176, 0.6)',\r\n          'Operational': 'rgba(255, 152, 0, 0.6)',\r\n          'Financial': 'rgba(33, 150, 243, 0.6)',\r\n          'Strategic': 'rgba(76, 175, 80, 0.6)',\r\n          'Reputational': 'rgba(121, 85, 72, 0.6)'\r\n        },\r\n        RiskPriority: {\r\n          'High': 'rgba(244, 67, 54, 0.6)',\r\n          'Medium': 'rgba(255, 152, 0, 0.6)',\r\n          'Low': 'rgba(76, 175, 80, 0.6)'\r\n        },\r\n        Repeated: {\r\n          'Repeated': 'rgba(244, 67, 54, 0.6)',\r\n          'Not Repeated': 'rgba(76, 175, 80, 0.6)'\r\n        },\r\n        CostImpact: {\r\n          'Low': 'rgba(76, 175, 80, 0.6)',\r\n          'Medium': 'rgba(255, 152, 0, 0.6)',\r\n          'High': 'rgba(244, 67, 54, 0.6)',\r\n          'Unknown': 'rgba(158, 158, 158, 0.6)'\r\n        }\r\n      }\r\n\r\n      // Special handling for CostImpact when it's numeric\r\n      if (this.selectedYAxis === 'CostImpact' && this.chartData && this.chartData.labels) {\r\n        // Check if labels are numeric (cost ranges)\r\n        const isNumeric = this.chartData.labels.some(label => !isNaN(parseFloat(label)));\r\n        \r\n        if (isNumeric) {\r\n          // Generate gradient colors based on value\r\n          return this.chartData.labels.map(label => {\r\n            const value = parseFloat(label);\r\n            // Create color based on value (green for low, red for high)\r\n            if (value < 500) {\r\n              return 'rgba(76, 175, 80, 0.6)'; // Green for low cost\r\n            } else if (value < 2000) {\r\n              return 'rgba(255, 152, 0, 0.6)'; // Orange for medium cost\r\n            } else {\r\n              return 'rgba(244, 67, 54, 0.6)'; // Red for high cost\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      return this.chartData?.labels?.map(label => \r\n        colorMaps[this.selectedYAxis.replace('By ', '')] \r\n          ? colorMaps[this.selectedYAxis.replace('By ', '')][label] || 'rgba(158, 158, 158, 0.6)'\r\n          : 'rgba(158, 158, 158, 0.6)'\r\n      ) || []\r\n    },\r\n    getBorderColors() {\r\n      const colorMaps = {\r\n        Severity: {\r\n          'High': '#F44336',\r\n          'Medium': '#FF9800',\r\n          'Low': '#4CAF50'\r\n        },\r\n        Status: {\r\n          'Scheduled': '#FF9800',\r\n          'Approved': '#4CAF50',\r\n          'Rejected': '#F44336'\r\n        },\r\n        Origin: {\r\n          'Manual': '#2196F3',\r\n          'SIEM': '#9C27B0',\r\n          'Audit Finding': '#FFC107',\r\n          'Other': '#795548'\r\n        },\r\n        RiskCategory: {\r\n          'Security': '#F44336',\r\n          'Compliance': '#9C27B0',\r\n          'Operational': '#FF9800',\r\n          'Financial': '#2196F3',\r\n          'Strategic': '#4CAF50',\r\n          'Reputational': '#795548'\r\n        },\r\n        RiskPriority: {\r\n          'High': '#F44336',\r\n          'Medium': '#FF9800',\r\n          'Low': '#4CAF50'\r\n        },\r\n        Repeated: {\r\n          'Repeated': '#F44336',\r\n          'Not Repeated': '#4CAF50'\r\n        },\r\n        CostImpact: {\r\n          'Low': '#4CAF50',\r\n          'Medium': '#FF9800',\r\n          'High': '#F44336',\r\n          'Unknown': '#9E9E9E'\r\n        }\r\n      }\r\n\r\n      // Special handling for CostImpact when it's numeric\r\n      if (this.selectedYAxis === 'CostImpact' && this.chartData && this.chartData.labels) {\r\n        // Check if labels are numeric (cost ranges)\r\n        const isNumeric = this.chartData.labels.some(label => !isNaN(parseFloat(label)));\r\n        \r\n        if (isNumeric) {\r\n          // Generate gradient colors based on value\r\n          return this.chartData.labels.map(label => {\r\n            const value = parseFloat(label);\r\n            // Create color based on value (green for low, red for high)\r\n            if (value < 500) {\r\n              return '#4CAF50'; // Green for low cost\r\n            } else if (value < 2000) {\r\n              return '#FF9800'; // Orange for medium cost\r\n            } else {\r\n              return '#F44336'; // Red for high cost\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      return this.chartData?.labels?.map(label => \r\n        colorMaps[this.selectedYAxis.replace('By ', '')] \r\n          ? colorMaps[this.selectedYAxis.replace('By ', '')][label] || '#9E9E9E'\r\n          : '#9E9E9E'\r\n      ) || []\r\n    },\r\n    refreshData() {\r\n      this.fetchDashboardData()\r\n      this.fetchRecentIncidents()\r\n    },\r\n    truncateDescription(text, maxLength) {\r\n      if (!text) return '';\r\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      \r\n      // Check if it's today\r\n      const today = new Date();\r\n      if (date.toDateString() === today.toDateString()) {\r\n        return 'Today, ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\r\n      }\r\n      \r\n      // Check if it's yesterday\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      if (date.toDateString() === yesterday.toDateString()) {\r\n        return 'Yesterday, ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\r\n      }\r\n      \r\n      // Otherwise return relative time\r\n      const diffTime = Math.abs(today - date);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      \r\n      if (diffDays < 7) {\r\n        return diffDays + ' days ago';\r\n      } else {\r\n        return date.toLocaleDateString();\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import './IncidentPerformanceDashboard.css';\r\n\r\n.chart-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n}\r\n\r\n.chart-type-icons {\r\n  display: flex;\r\n  gap: 8px;\r\n  padding: 4px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chart-type-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: none;\r\n  background: transparent;\r\n  color: #64748b;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.chart-type-btn:hover {\r\n  background-color: #e2e8f0;\r\n  color: #1e293b;\r\n}\r\n\r\n.chart-type-btn.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.chart-type-btn i {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.axis-controls {\r\n  display: flex;\r\n  gap: 16px;\r\n}\r\n\r\n.axis-select {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.axis-select label {\r\n  color: #64748b;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.axis-select select {\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  border: 1px solid #e2e8f0;\r\n  background: white;\r\n  color: #1e293b;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.axis-select select:hover {\r\n  border-color: #94a3b8;\r\n}\r\n\r\n.axis-select select:focus {\r\n  outline: none;\r\n  border-color: #4CAF50;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.1);\r\n}\r\n\r\n.chart-type-select {\r\n  display: none;\r\n}\r\n\r\n.metric-icon.incident-icon {\r\n  background-color: rgba(239, 83, 80, 0.15);\r\n  color: #ef5350;\r\n}\r\n\r\n.metric-icon.open-icon {\r\n  background-color: rgba(255, 152, 0, 0.15);\r\n  color: #ff9800;\r\n}\r\n\r\n.metric-icon.mttd-icon {\r\n  background-color: rgba(33, 150, 243, 0.15);\r\n  color: #2196f3;\r\n}\r\n\r\n.metric-icon.rejected-icon {\r\n  background-color: rgba(244, 67, 54, 0.15);\r\n  color: #f44336;\r\n}\r\n\r\n.metric-icon.approved-icon {\r\n  background-color: rgba(76, 175, 80, 0.15);\r\n  color: #4caf50;\r\n}\r\n\r\n.activity-icon.high {\r\n  background-color: rgba(244, 67, 54, 0.15);\r\n  color: #f44336;\r\n}\r\n\r\n.activity-icon.medium {\r\n  background-color: rgba(255, 152, 0, 0.15);\r\n  color: #ff9800;\r\n}\r\n\r\n.activity-icon.low {\r\n  background-color: rgba(76, 175, 80, 0.15);\r\n  color: #4caf50;\r\n}\r\n\r\n.activity-meta {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-top: 6px;\r\n  align-items: center;\r\n}\r\n\r\n.activity-tag {\r\n  font-size: 0.75rem;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-weight: 500;\r\n}\r\n\r\n.origin-tag {\r\n  background-color: rgba(33, 150, 243, 0.1);\r\n  color: #2196f3;\r\n}\r\n\r\n.status-tag {\r\n  background-color: rgba(158, 158, 158, 0.1);\r\n  color: #9e9e9e;\r\n}\r\n\r\n.status-tag.scheduled {\r\n  background-color: rgba(255, 152, 0, 0.1);\r\n  color: #ff9800;\r\n}\r\n\r\n.status-tag.approved {\r\n  background-color: rgba(76, 175, 80, 0.1);\r\n  color: #4caf50;\r\n}\r\n\r\n.status-tag.rejected {\r\n  background-color: rgba(244, 67, 54, 0.1);\r\n  color: #f44336;\r\n}\r\n</style>","import { render } from \"./IncidentPerformanceDashboard.vue?vue&type=template&id=740508d1\"\nimport script from \"./IncidentPerformanceDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./IncidentPerformanceDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./IncidentPerformanceDashboard.vue?vue&type=style&index=0&id=740508d1&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","refreshData","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","$data","dashboardData","total_count","_hoisted_9","change_percentage","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","status_counts","scheduled","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","rejected","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","approved","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_normalizeClass","active","selectedChartType","$event","changeChartType","title","_hoisted_27","_hoisted_28","selectedXAxis","onChange","fetchDashboardData","value","_hoisted_29","selectedYAxis","id","_hoisted_30","_hoisted_31","_Fragment","_renderList","recentIncidents","incident","index","key","priority_class","icon","_hoisted_32","IncidentTitle","truncateDescription","Description","_hoisted_33","_hoisted_34","origin_text","status_class","Status","_hoisted_35","formatDate","CreatedAt","_createVNode","_component_PopupModal","ChartJS","register","CategoryScale","LinearScale","BarElement","PointElement","LineElement","ArcElement","RadialLinearScale","Title","Tooltip","Legend","name","components","PopupModal","data","chart","chartId","api","incidentService","resolved","resolution_rate","chartData","mounted","this","fetchRecentIncidents","beforeUnmount","destroyChart","beforeRouteLeave","to","from","next","methods","destroy","response","getRecentIncidents","success","incidents","map","priorityClass","RiskPriority","priority","toLowerCase","includes","statusClass","status","originText","Origin","console","error","AccessUtils","handleApiError","dashboardResponse","analyticsResponse","log","xAxis","yAxis","getIncidentDashboard","err","Error","message","getIncidentAnalytics","errorMessage","summary","$nextTick","updateChart","labels","datasets","label","backgroundColor","borderColor","borderWidth","canvas","document","getElementById","config","createChartConfig","type","options","getChartOptions","hasMultipleDatasets","Array","isArray","length","dataset","colors","getColorForIndex","tension","undefined","fill","getBackgroundColors","getBorderColors","responsive","maintainAspectRatio","animation","duration","easing","plugins","legend","display","position","tooltip","enabled","callbacks","context","isNaN","parseFloat","raw","total","reduce","a","b","percentage","toFixed","scales","y","beginAtZero","ticks","stepSize","precision","isNumeric","some","x","callback","getLabelForValue","stacked","newType","colorMaps","Severity","RiskCategory","Repeated","CostImpact","replace","text","maxLength","substring","dateString","date","Date","today","toDateString","toLocaleTimeString","hour","minute","yesterday","setDate","getDate","diffTime","Math","abs","diffDays","ceil","toLocaleDateString","__exports__","render"],"sourceRoot":""}